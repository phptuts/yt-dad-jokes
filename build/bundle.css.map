{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Form.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from \"svelte\";\n\n  import { Col, Container, Row, Button } from \"sveltestrap\";\n\n  import { getRandomJoke, getSearchJokes } from \"./requests.js\";\n\n  import JokeForm from \"./Form.svelte\";\n  import Joke from \"./Joke.svelte\";\n  import Transition from \"./Transition.svelte\";\n  let randomJoke;\n  let jokes = [];\n  let mode = \"loading\";\n  onMount(async () => {\n    await onRandomJoke();\n  });\n\n  async function onSearch(e) {\n    try {\n      mode = \"loading\";\n      await sleep(1000);\n      jokes = await getSearchJokes(e.detail);\n      await sleep(1000);\n      mode = \"search\";\n      console.log(jokes);\n    } catch (e) {\n      alert(\"There was an error ahaha\");\n    }\n  }\n\n  async function onRandomJoke() {\n    try {\n      mode = \"loading\";\n      await sleep(500);\n      randomJoke = await getRandomJoke();\n      await sleep(500);\n      mode = \"random\";\n    } catch (e) {\n      alert(\"There was an error ahaha\");\n    }\n  }\n\n  const sleep = delayMS => new Promise(res => setTimeout(res, delayMS));\n</script>\n\n<style>\n  :global(.random-joke) {\n    width: 100%;\n  }\n  :global(.row) {\n    margin-top: 10px;\n  }\n</style>\n\n<Container>\n  <Row>\n    <Col>\n      <h1>Dad Jokes!!! :)</h1>\n    </Col>\n  </Row>\n  <JokeForm on:search={onSearch} />\n  <Row>\n    <Col>\n      <Button on:click={onRandomJoke} class=\"random-joke\" color=\"danger\">\n        Random Joke\n      </Button>\n    </Col>\n  </Row>\n  {#if mode === 'random'}\n    <Transition>\n      <Row>\n        <Col>\n          <Joke joke={randomJoke} />\n        </Col>\n      </Row>\n    </Transition>\n  {/if}\n\n  {#if mode === 'search' && jokes.length > 0}\n    <Transition>\n      {#each jokes as jokeObj (jokeObj.id)}\n        <Row>\n          <Col>\n            <Joke joke={jokeObj.joke} />\n          </Col>\n        </Row>\n      {/each}\n    </Transition>\n  {/if}\n  {#if mode === 'search' && jokes.length == 0}\n    <Transition>\n      <Row>\n        <Col>\n          <Joke joke=\"Jokes on you!!! :) Please try another search.\" />\n        </Col>\n      </Row>\n    </Transition>\n  {/if}\n</Container>\n",
    "<script>\n  import {\n    Button,\n    Form,\n    FormGroup,\n    FormText,\n    Input,\n    Label,\n    Col,\n    Row\n  } from \"sveltestrap\";\n  import { createEventDispatcher } from \"svelte\";\n  let term = \"\";\n  $: canSubmit = term.length > 0;\n  const dispatch = createEventDispatcher();\n\n  function onSearch(e) {\n    e.preventDefault();\n    if (canSubmit) {\n      dispatch(\"search\", term);\n      term = \"\";\n    }\n  }\n</script>\n\n<style>\n  :global(.search) {\n    margin-top: 30px;\n    width: 100%;\n  }\n\n  :global(button:disabled) {\n    cursor: not-allowed;\n  }\n\n  @media (max-width: 700px) {\n    :global(.search) {\n      margin-top: 0;\n    }\n  }\n</style>\n\n<Form on:submit={onSearch}>\n  <Row>\n    <Col md=\"8\" xs=\"12\">\n      <FormGroup>\n        <Label for=\"dadJokesSearch\">Search</Label>\n        <Input\n          type=\"text\"\n          bind:value={term}\n          id=\"dadJokesSearch\"\n          placeholder=\"Search For Your Favorite Dad Jokes\" />\n      </FormGroup>\n    </Col>\n    <Col md=\"4\" xs=\"12\">\n      <Button\n        disabled={!canSubmit}\n        type=\"submit\"\n        color=\"primary\"\n        class=\"search\">\n        Search\n      </Button>\n    </Col>\n  </Row>\n\n</Form>\n"
  ],
  "names": [],
  "mappings": "AA8CU,YAAY,AAAE,CAAC,AACrB,KAAK,CAAE,IAAI,AACb,CAAC,AACO,IAAI,AAAE,CAAC,AACb,UAAU,CAAE,IAAI,AAClB,CAAC;ACzBO,OAAO,AAAE,CAAC,AAChB,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,AACb,CAAC,AAEO,eAAe,AAAE,CAAC,AACxB,MAAM,CAAE,WAAW,AACrB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACjB,OAAO,AAAE,CAAC,AAChB,UAAU,CAAE,CAAC,AACf,CAAC,AACH,CAAC"
}